local Players = game:GetService("Players")
local DiscordWebhook = require(script.Parent.DiscordWebhook)
local WebhookHandler = require(script.Parent.WebhookHandler)

local RewardService = {}

-- Trao ph·∫ßn th∆∞·ªüng v√† g·ª≠i th√¥ng b√°o
function RewardService.giveReward(player, rewardType, amount)
    -- 1. Logic trao qu√† trong game
    local leaderstats = player:FindFirstChild("leaderstats")
    if not leaderstats then return false end
    
    local stat = leaderstats:FindFirstChild(rewardType)
    if not stat then return false end
    
    stat.Value += amount
    
    -- 2. Chu·∫©n b·ªã d·ªØ li·ªáu th√¥ng b√°o
    local rewardData = {
        itemType = rewardType,
        amount = amount,
        newTotal = stat.Value,
        title = "üéâ CH√öC M·ª™NG!",
        message = string.format("B·∫°n v·ª´a nh·∫≠n ƒë∆∞·ª£c %d %s", amount, rewardType),
        color = 65407 -- M√†u xanh ng·ªçc
    }
    
    -- 3. G·ª≠i th√¥ng b√°o Discord
    local success = DiscordWebhook.sendPlayerReward(player, rewardData)
    
    if not success then
        warn(`Kh√¥ng th·ªÉ g·ª≠i th√¥ng b√°o cho {player.Name}`)
    end
    
    return true
end

-- Kh·ªüi t·∫°o h·ªá th·ªëng
function RewardService.init()
    -- ƒê·∫£m b·∫£o player c√≥ ƒë·ªß d·ªØ li·ªáu
    Players.PlayerAdded:Connect(function(player)
        player:WaitForChild("Inventory")
        player:WaitForChild("leaderstats")
    end)
    
    -- K·∫øt n·ªëi s·ª± ki·ªán nh·∫≠n qu√† (v√≠ d·ª•)
    -- game:GetService("ReplicatedStorage").RewardEvent.OnServerEvent:Connect(function(player, ...)
    --     RewardService.giveReward(player, ...)
    -- end)
end

return RewardService